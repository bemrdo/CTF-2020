n = 763565384291820108245409659720282433832313220461644124044756768433435414692803547894830169882311271039570631670697365441611318106395053189965367628115194121738441606063731669639969113709179030012225876500414041621814081304190631392028245159028226779416585368787171980867808279382534620004075729317622760535368512577429092405193989893389243316660492338867180515514692054634678891251946091279111826397804969985524413206148987315860908157354102901223286319638473579133772849906720610362208018901952596133789995138743380557180140755619048983221721509892782859477079928552385844778498752795815293376529847980834269597314503057751339707909137236385180116594571788533956906964305485554843816720785218699065372892014016543610409962955746522171233342610348126974554955112141331597876913535769549011932293222386759561998220855966783221436819841903745002157402198218696677866152633664582389838017191526986653902894453385949932346130299348605730273565043669974012977023290751255919403215235341699665681443299876596376224627090790369396372897764935781965575416522039182261931070732073879194738719251431645457475673762004901595333199845016574306188450581065935247616168331519001962508877079932527143887082738634514464727372915898363301029470612379
e = 65537
d = 576323684321515685406219909787196406181991939871457165265391127261368634865712808034631874870659464626751314009227091245170597699786955476979826282746329438727951424165716324677826451908666095466450481513793444662780648271863127278301862688809226328190500203738746802655095661198047782369068007788356614929620502054642529943624607535688119839204234463500067921638917820079634802244057026583648101142771574001006311299805694593380467261419931551824329479335897799188720994148127648689701723652348858207639286197614783445099300282549580801746275786324616581883412968945363965360227341895384276090810160065610998060649045101691365354969507234402393933639532145388036396478045336853644071631038002265697579220598337428312854592253920174025713764160312346618273915661012889910516767349399848483175259689094188425827727801014338978738218463493816073894633845525228527003349751564305715349415199330235793090368604344690326009533723720294670416731369571684043256313019748821003829332416735460937801864952397035767883687914172330538760069906175747957280413688200980080535352069531094502775120939141271891174643853532120005583908387740588603802929532213824298058689603607287414460316670525530332062236997716417731143173972548964993848762146241
p = 29470332608871315824347008086966937279123505308311379714093675081444363506668262795042291682549241647900492909054804521691579163850368709866164850501227623850276098071779362959069333679200621352606536876807798943662535488347883703329199455812748634031782957098135776670056216687515724788216751093436192939270757264002265585229973963309071342359285500481783679106459713988786563774221042705134590339980866695740697018849506688959243685437887112601367874075843554841734286700616352469890542283770185097413671533096657690506012821828573752294133698982777229483368058918212687383555656315092060717750659112266253055143537
q = 25909628996245790810248754651649860785605385747586487804563727551327953378142995057735092702929719798203655698550237741661543461570934581313995237263728967647763427718837250116291970942511698833626349675089770741113004430311927922543901318439220255883987644574302440948802748425059583445515676259279970624990272962400488040385247794613199155512485476415099765809964104637782745466195631034940090225294764769149592460778387153940264700030162825348678142418458952306051778532396995437339556822685026741009882549200461593149501881404959112886841825784857023909669577250192422300037720024690138652241232023468329435224267

from Crypto.Util.number import *
from base64 import b64decode as b64d

c = open('flag.enc', 'rb').read()
print b64d(c)
